managed implementation in class ZRAP100_BP_TravelTP1 unique;
strict ( 1 );
with draft;

define behavior for ZRAP100_R_TRAVELTP1 alias Travel
persistent table zrap100_atrav1
draft table zrap100_dtrav1
etag master LastChangedAt
lock master total etag LocalLastChangedAt
authorization master ( global )
early numbering

{
  //field ( mandatory : create )
  //TravelID;

  field ( readonly )
  CreatedAt,
  CreatedBy,
  LocalLastChangedAt,
  LastChangedAt,
  LastChangedBy;

  //field ( readonly : update )
  field ( readonly )
  TravelID;

  field ( mandatory )
  CustomerID,
  BeginDate,
  EndDate;

  create;
  update ( features : instance );
  delete ( features : instance );

  //****DETERMINATION****
  //This determination will be used to set the default value of the field OverallStatus to open (O)
  //at the creation time new Travel instances.
  determination setStatusToOpen on modify { create; }

  //****VALIDATION****
  validation validateCustomer on save { create; field CustomerID; }
  validation validateDates on save { create; field BeginDate, EndDate; }


  //****ACTION****(NON-FACTORY ACTION)
  action ( features : instance ) deductDiscount result [1] $self;
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  //****ACTION****(NON-FACTORY ACTION)- WITH INPUT
  action ( features : instance ) deductDiscount_input parameter zcds_Travel_disc_input result [1] $self;

  //****ACTION****(FACTORY ACTION)
  factory action copyTravel [1];


  draft action ( features : instance ) Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  //draft determine action Prepare;

  //****VALIDATION FOR DRAFT****
  //In order to have draft instances being checked and determinations being executed before they become active
  draft determine action Prepare
  {
    validation validateCustomer;
    validation validateDates; }
  mapping for zrap100_atrav1
    {
      TravelID           = travel_id;
      AgencyID           = agency_id;
      CustomerID         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      Attachment         = attachment;
      MimeType           = mime_type;
      FileName           = file_name;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }




}